/*
SQLyog Ultimate v11.33 (64 bit)
MySQL - 5.5.19 : Database - easydoc
*********************************************************************
*/


/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`easydoc` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `easydoc`;

/*Table structure for table `doc_template` */

DROP TABLE IF EXISTS `doc_template`;

CREATE TABLE `doc_template` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL COMMENT '模板名称',
  `content` text NOT NULL COMMENT '模板内容',
  `creator_id` bigint(20) NOT NULL COMMENT '创建者,为0表示系统模板',
  `project_id` bigint(20) NOT NULL COMMENT '属于哪个项目，为0表示共享模板',
  `gmt_create` datetime NOT NULL,
  `gmt_update` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='文档模板';

/*Data for the table `doc_template` */

insert  into `doc_template`(`id`,`name`,`content`,`creator_id`,`project_id`,`gmt_create`,`gmt_update`) values (1,'API模板','**简要描述：** \r\n\r\n- 用户注册接口\r\n\r\n**请求URL：** \r\n- ` http://xx.com/api/user/register `\r\n  \r\n**请求方式：**\r\n- POST \r\n\r\n**参数：** \r\n\r\n|参数名|必选|类型|说明|\r\n|:----    |:---|:----- |-----   |\r\n|username |是  |string |用户名   |\r\n|password |是  |string | 密码    |\r\n|name     |否  |string | 昵称    |\r\n\r\n **返回示例**\r\n\r\n``` \r\n  {\r\n    \"error_code\": 0,\r\n    \"data\": {\r\n      \"uid\": \"1\",\r\n      \"username\": \"12154545\",\r\n      \"name\": \"吴系挂\",\r\n      \"groupid\": 2 ,\r\n      \"reg_time\": \"1436864169\",\r\n      \"last_login_time\": \"0\",\r\n    }\r\n  }\r\n```\r\n\r\n **返回参数说明** \r\n\r\n|参数名|类型|说明|\r\n|:-----  |:-----|-----                           |\r\n|groupid |int   |用户组id，1：超级管理员；2：普通用户  |\r\n\r\n **备注** \r\n\r\n- 更多返回错误代码请看首页的错误代码描述\r\n\r\n\r\n',0,0,'2018-05-25 10:29:32','2018-05-25 10:29:34');

/*Table structure for table `doc_user` */

DROP TABLE IF EXISTS `doc_user`;

CREATE TABLE `doc_user` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(200) NOT NULL COMMENT '用户名',
  `password` varchar(200) NOT NULL COMMENT '密码',
  `status` tinyint(4) NOT NULL COMMENT '状态',
  `gmt_create` datetime NOT NULL,
  `gmt_update` datetime NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='用户表';

/*Data for the table `doc_user` */

insert  into `doc_user`(`id`,`username`,`password`,`status`,`gmt_create`,`gmt_update`) values (1,'admin','14e1b600b1fd579f47433b88e8d85291',1,'2018-02-28 10:35:50','2018-02-28 10:35:50'),(2,'jim','14e1b600b1fd579f47433b88e8d85291',1,'2018-02-28 10:35:50','2018-02-28 10:35:50'),(3,'admin2','14e1b600b1fd579f47433b88e8d85291',1,'2018-03-01 10:06:19','2018-03-01 10:06:19');

/*Table structure for table `project` */

DROP TABLE IF EXISTS `project`;

CREATE TABLE `project` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL COMMENT '项目名称',
  `description` varchar(400) DEFAULT NULL COMMENT '项目描述',
  `creator_id` bigint(20) NOT NULL COMMENT '创建者userId',
  `gmt_create` datetime NOT NULL,
  `gmt_update` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COMMENT='项目表';

/*Data for the table `project` */

insert  into `project`(`id`,`name`,`description`,`creator_id`,`gmt_create`,`gmt_update`) values (1,'文档系统','记录一些文档信息',1,'2018-02-28 15:47:34','2018-05-25 13:58:42'),(2,'文档系统2','记录一些文档信息2',3,'2018-02-28 16:15:50','2018-02-28 16:15:50');

/*Table structure for table `project_user` */

DROP TABLE IF EXISTS `project_user`;

CREATE TABLE `project_user` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `project_id` bigint(20) NOT NULL COMMENT '项目id',
  `user_id` bigint(20) NOT NULL COMMENT '用户id',
  `permission_value` bigint(20) NOT NULL COMMENT '权限值，1：只读，2：写',
  `gmt_create` datetime NOT NULL,
  `gmt_update` datetime NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_user_project` (`project_id`,`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 COMMENT='项目用户';

/*Data for the table `project_user` */

insert  into `project_user`(`id`,`project_id`,`user_id`,`permission_value`,`gmt_create`,`gmt_update`) values (1,2,1,1,'2018-03-02 10:57:16','2018-03-02 10:57:16'),(2,1,1,2,'2018-03-01 13:43:10','2018-04-28 13:43:13'),(12,1,2,1,'2018-05-24 17:23:44','2018-05-24 17:23:44'),(13,2,3,2,'2018-03-02 10:57:16','2018-03-02 10:57:16');

/*Table structure for table `resource` */

DROP TABLE IF EXISTS `resource`;

CREATE TABLE `resource` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL COMMENT '资源名称',
  `project_id` bigint(20) NOT NULL COMMENT '所属项目',
  `creator_id` bigint(20) NOT NULL COMMENT '创建者userId',
  `last_updator_id` bigint(20) NOT NULL COMMENT '更改人id',
  `parent_id` bigint(20) DEFAULT NULL COMMENT '父节点ID',
  `is_deleted` tinyint(4) NOT NULL DEFAULT '0' COMMENT '是否已删除',
  `gmt_create` datetime NOT NULL,
  `gmt_update` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8 COMMENT='资源表';

/*Data for the table `resource` */

insert  into `resource`(`id`,`name`,`project_id`,`creator_id`,`last_updator_id`,`parent_id`,`is_deleted`,`gmt_create`,`gmt_update`) values (1,'Editor.md',1,1,1,4,0,'2018-02-28 18:07:11','2018-05-02 13:56:39'),(2,'easyopen',1,1,1,4,1,'2018-02-28 18:08:47','2018-05-24 17:47:29'),(3,'Cmd Markdown',1,1,1,4,0,'2018-03-01 13:42:37','2018-03-01 13:42:37'),(4,'文档目录',1,1,1,0,0,'2018-04-26 14:51:54','2018-04-26 14:51:54'),(5,'fastmybatis介绍',1,1,1,7,0,'2018-04-28 14:58:58','2018-06-20 11:34:24'),(6,'1',1,1,1,4,1,'2018-04-28 17:12:27','2018-04-28 17:12:33'),(7,'新的目录',1,1,1,0,0,'2018-04-28 17:32:09','2018-04-28 17:32:09'),(8,'easyopen介绍',1,1,1,7,0,'2018-04-28 17:33:46','2018-05-24 17:45:23'),(10,'123',1,1,1,9,1,'2018-04-28 17:44:48','2018-04-28 17:44:55'),(11,'目录1',2,1,1,0,0,'2018-05-24 17:02:11','2018-05-24 17:02:11'),(12,'什么情况',2,1,1,11,0,'2018-05-24 17:02:37','2018-05-24 17:02:37'),(13,'一盏清茶，听风数雨',1,1,1,4,0,'2018-05-24 17:18:57','2018-05-24 17:47:18'),(14,'关于easydoc',1,1,1,7,0,'2018-05-24 17:43:45','2018-06-20 11:33:45'),(15,'JUI介绍',1,1,1,7,1,'2018-05-25 10:01:54','2018-05-25 10:08:08'),(16,'2',1,1,1,7,1,'2018-05-25 13:59:38','2018-05-25 14:00:04'),(17,'11',1,1,1,7,1,'2018-06-06 11:59:51','2018-06-06 12:00:03');

/*Table structure for table `resource_content` */

DROP TABLE IF EXISTS `resource_content`;

CREATE TABLE `resource_content` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `resource_id` bigint(20) NOT NULL COMMENT '资源表ID',
  `content` mediumtext NOT NULL COMMENT '资源内容',
  `gmt_create` datetime NOT NULL,
  `gmt_update` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8 COMMENT='资源内容表';

/*Data for the table `resource_content` */

insert  into `resource_content`(`id`,`resource_id`,`content`,`gmt_create`,`gmt_update`) values (1,1,'#### Disabled options\n\n- TeX (Based on KaTeX);\n- Emoji;\n- Task lists;\n- HTML tags decode;\n- Flowchart and Sequence Diagram;\n\n```\n&lt;script&gt;alert(4)&lt;/script&gt;\n```\n\n#### Editor.md directory\n\n    editor.md/\n            lib/\n            css/\n            scss/\n            tests/\n            fonts/\n            images/\n            plugins/\n            examples/\n            languages/     \n            editormd.js\n            ...\n\n```html\n&lt;!-- English --&gt;\n&lt;script src=\"../dist/js/languages/en.js\"&gt;&lt;/script&gt;\n\n&lt;!-- 繁體中文 --&gt;\n&lt;script src=\"../dist/js/languages/zh-tw.js\"&gt;&lt;/script&gt;\n```\n','2018-02-28 18:07:11','2018-05-02 13:56:39'),(2,2,'# easyopen\r\n一个简单易用的接口开放平台，平台封装了常用的参数校验、结果返回等功能，开发者只需实现业务代码即可。\r\n\r\neasyopen的功能类似于[淘宝开放平台](http://open.taobao.com/docs/api.htm?spm=a219a.7629065.0.0.6cQDnQ&apiId=4)，它的所有接口只提供一个url，通过参数来区分不同业务。这样做的好处是接口url管理方便了，平台管理者只需维护好接口参数即可。由于参数的数量是可知的，这样可以在很大程度上进行封装。封装完后平台开发者只需要写业务代码，其它功能可以通过配置来完成。\r\n\r\n得益于Java的注解功能以及Spring容器对bean的管理，我们的开放接口平台就这样产生了。\r\n\r\n## 功能特点\r\n\r\n- 开箱即用，写完业务代码直接启动服务即可使用，无需其它配置。\r\n- 参数自动校验，支持国际化参数校验（JSR-303）。\r\n- 校验功能和结果返回功能实现各自独立，方便自定义实现或扩展。\r\n- 采用注解来定义接口，维护简单方便。\r\n- 支持i18n国际化消息返回。\r\n- 自动生成文档页面，类似swagger。\r\n- 采用数字签名进行参数验证，签名算法见：easyopen\\签名算法.txt。\r\n- 采用appKey-secret形式接入平台，即需要给接入方提供一个appKey和secret。\r\n\r\n## 结构图\r\n\r\n![easyopen结构图](https://gitee.com/uploads/images/2018/0117/095712_1f70de95_332975.png \"easyopen_arc.png\")\r\n\r\n## 文档页面\r\n\r\n![文档页面](https://gitee.com/uploads/images/2018/0203/145842_55f2794e_332975.png \"easyopen_arc.png\")\r\n\r\n## 示例\r\n\r\n- 定义接口：\r\n\r\n```\r\n@Api(name = \"goods.get\")\r\npublic Goods getGoods(GoodsParam param) {\r\n    Goods goods = new Goods();\r\n    goods.setId(1L);\r\n    goods.setGoods_name(\"苹果iPhoneX\");\r\n    goods.setPrice(new BigDecimal(8000));\r\n    return goods;\r\n}\r\n```\r\n\r\n- 请求数据：\r\n\r\n```\r\n{\r\n  \"name\": \"goods.get\",\r\n  \"version\": \"\",\r\n  \"app_key\": \"test\",\r\n  \"data\": \"%7B%22goodsPrice%22%3A%22%22%2C%22goods_name%22%3A%22iphoneX%22%7D\",\r\n  \"timestamp\": \"2018-03-22 13:48:58\",\r\n  \"format\": \"json\",\r\n  \"sign\": \"C946ACA5AC95B1790511764A10E675B7\"\r\n}\r\n```\r\n\r\n- 返回结果：\r\n\r\n```\r\n{\r\n    \"code\":\"0\",\r\n    \"data\":{\r\n        \"goods_name\":\"苹果iPhoneX\",\r\n        \"id\":1,\r\n        \"price\":8000\r\n    }\r\n}\r\n```\r\n\r\n## 工程说明\r\n\r\n- easyopen：easyopen核心代码\r\n- easyopen-server：开放平台服务端（spring-boot），接口提供方\r\n- easyopen-server2：基于springboot2,含有WebFlux例子\r\n- easyopen-sdk：接口对应的开发包，配合server使用\r\n- static：文档静态资源\r\n- index.html：文档首页，配合Pages功能使用\r\n\r\n## 使用说明\r\n\r\n1. 启动easyopen-server（业务代码在GoodsApi.java中）\r\n2. 运行easyopen-sdk中的SdkTest.java\r\n\r\n文档页面：http://localhost:8080/api/doc\r\n\r\n## 开发文档\r\n\r\n[easyopen开发文档](http://durcframework.gitee.io/easyopen)\r\n\r\n离线版：浏览器打开index.html\r\n\r\n## 意见交流\r\n\r\nQ群：328419269','2018-02-28 18:08:47','2018-03-02 10:57:23'),(3,3,'# 欢迎使用 Cmd Markdown 编辑阅读器\r\n\r\n------\r\n\r\n我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，**Cmd Markdown** 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：\r\n\r\n> * 整理知识，学习笔记\r\n> * 发布日记，杂文，所见所想\r\n> * 撰写发布技术文稿（代码支持）\r\n> * 撰写发布学术论文（LaTeX 公式支持）\r\n\r\n![cmd-markdown-logo](https://www.zybuluo.com/static/img/logo.png)\r\n\r\n除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：\r\n\r\n### [Windows/Mac/Linux 全平台客户端](https://www.zybuluo.com/cmd/)\r\n\r\n> 请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class=\"icon-file\"></i> **新文稿** 或者使用快捷键 `Ctrl+Alt+N`。\r\n\r\n------\r\n\r\n## 什么是 Markdown\r\n\r\nMarkdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，**粗体** 或者 *斜体* 某些文字，更棒的是，它还可以\r\n\r\n### 1. 制作一份待办事宜 [Todo 列表](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表)\r\n\r\n- [ ] 支持以 PDF 格式导出文稿\r\n- [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率\r\n- [x] 新增 Todo 列表功能\r\n- [x] 修复 LaTex 公式渲染问题\r\n- [x] 新增 LaTex 公式编号功能\r\n\r\n### 2. 书写一个质能守恒公式[^LaTeX]\r\n\r\n$$E=mc^2$$\r\n\r\n### 3. 高亮一段代码[^code]\r\n\r\n```python\r\n@requires_authorization\r\nclass SomeClass:\r\n    pass\r\n\r\nif __name__ == \'__main__\':\r\n    # A comment\r\n    print \'hello world\'\r\n```\r\n\r\n### 4. 高效绘制 [流程图](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图)\r\n\r\n```flow\r\nst=>start: Start\r\nop=>operation: Your Operation\r\ncond=>condition: Yes or No?\r\ne=>end\r\n\r\nst->op->cond\r\ncond(yes)->e\r\ncond(no)->op\r\n```\r\n\r\n### 5. 高效绘制 [序列图](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图)\r\n\r\n```seq\r\nAlice->Bob: Hello Bob, how are you?\r\nNote right of Bob: Bob thinks\r\nBob-->Alice: I am good thanks!\r\n```\r\n\r\n### 6. 高效绘制 [甘特图](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图)\r\n\r\n```gantt\r\n    title 项目开发流程\r\n    section 项目确定\r\n        需求分析       :a1, 2016-06-22, 3d\r\n        可行性报告     :after a1, 5d\r\n        概念验证       : 5d\r\n    section 项目实施\r\n        概要设计      :2016-07-05  , 5d\r\n        详细设计      :2016-07-08, 10d\r\n        编码          :2016-07-15, 10d\r\n        测试          :2016-07-22, 5d\r\n    section 发布验收\r\n        发布: 2d\r\n        验收: 3d\r\n```\r\n\r\n### 7. 绘制表格\r\n\r\n| 项目        | 价格   |  数量  |\r\n| --------   | -----:  | :----:  |\r\n| 计算机     | \\$1600 |   5     |\r\n| 手机        |   \\$12   |   12   |\r\n| 管线        |    \\$1    |  234  |\r\n\r\n### 8. 更详细语法说明\r\n\r\n想要查看更详细的语法说明，可以参考我们准备的 [Cmd Markdown 简明语法手册][1]，进阶用户可以参考 [Cmd Markdown 高阶语法手册][2] 了解更多高级功能。\r\n\r\n总而言之，不同于其它 *所见即所得* 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。**Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。** 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。\r\n\r\n---\r\n\r\n## 什么是 Cmd Markdown\r\n\r\n您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 **编辑/发布/阅读** Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。\r\n\r\n### 1. 实时同步预览\r\n\r\n我们将 Cmd Markdown 的主界面一分为二，左边为**编辑区**，右边为**预览区**，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！\r\n\r\n### 2. 编辑工具栏\r\n\r\n也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 **编辑区** 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。\r\n\r\n![tool-editor](https://www.zybuluo.com/static/img/toolbar-editor.png)\r\n\r\n### 3. 编辑模式\r\n\r\n完全心无旁骛的方式编辑文字：点击 **编辑工具栏** 最右侧的拉伸按钮或者按下 `Ctrl + M`，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！\r\n\r\n### 4. 实时的云端文稿\r\n\r\n为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 **编辑工具栏** 的最右侧提示 `已保存` 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。\r\n\r\n### 5. 离线模式\r\n\r\n在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。\r\n\r\n### 6. 管理工具栏\r\n\r\n为了便于管理您的文稿，在 **预览区** 的顶部放置了如下所示的 **管理工具栏**：\r\n\r\n![tool-manager](https://www.zybuluo.com/static/img/toolbar-manager.jpg)\r\n\r\n通过管理工具栏可以：\r\n\r\n<i class=\"icon-share\"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享\r\n<i class=\"icon-file\"></i> 新建：开始撰写一篇新的文稿\r\n<i class=\"icon-trash\"></i> 删除：删除当前的文稿\r\n<i class=\"icon-cloud\"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地\r\n<i class=\"icon-reorder\"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作\r\n<i class=\"icon-pencil\"></i> 模式：切换 普通/Vim/Emacs 编辑模式\r\n\r\n### 7. 阅读工具栏\r\n\r\n![tool-manager](https://www.zybuluo.com/static/img/toolbar-reader.jpg)\r\n\r\n通过 **预览区** 右上角的 **阅读工具栏**，可以查看当前文稿的目录并增强阅读体验。\r\n\r\n工具栏上的五个图标依次为：\r\n\r\n<i class=\"icon-list\"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落\r\n<i class=\"icon-chevron-sign-left\"></i> 视图：互换左边编辑区和右边预览区的位置\r\n<i class=\"icon-adjust\"></i> 主题：内置了黑白两种模式的主题，试试 **黑色主题**，超炫！\r\n<i class=\"icon-desktop\"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验\r\n<i class=\"icon-fullscreen\"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境\r\n\r\n### 8. 阅读模式\r\n\r\n在 **阅读工具栏** 点击 <i class=\"icon-desktop\"></i> 或者按下 `Ctrl+Alt+M` 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。\r\n\r\n### 9. 标签、分类和搜索\r\n\r\n在编辑区任意行首位置输入以下格式的文字可以标签当前文档：\r\n\r\n标签： 未分类\r\n\r\n标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：\r\n\r\n![file-list](https://www.zybuluo.com/static/img/file-list.png)\r\n\r\n### 10. 文稿发布和分享\r\n\r\n在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class=\"icon-share\"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！\r\n\r\n------\r\n\r\n再一次感谢您花费时间阅读这份欢迎稿，点击 <i class=\"icon-file\"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！\r\n\r\n作者 [@ghosert][3]     \r\n2016 年 07月 07日    \r\n\r\n[^LaTeX]: 支持 **LaTeX** 编辑显示支持，例如：$\\sum_{i=1}^n a_i=0$， 访问 [MathJax][4] 参考更多使用方法。\r\n\r\n[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，**四十一**种主流编程语言。\r\n\r\n[1]: https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown\r\n[2]: https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册\r\n[3]: http://weibo.com/ghosert\r\n[4]: http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\r\n\r\n','2018-03-01 13:42:37','2018-03-01 13:42:37'),(4,419077552393420801,'aaaaaaaaaaaaaaaaaa','2018-03-02 10:26:55','2018-03-02 10:26:55'),(5,419077552393420802,'aaaaaaaaaaaaaaaaaa','2018-03-02 10:57:23','2018-03-02 10:57:23'),(6,5,'# fastmybatis\n\nfastmybatis是一个mybatis开发框架，目的为简化mybatis的开发，让开发更高效。\n\n- 无需编写xml文件即可完成CRUD操作。\n- 支持mysql，sqlserver，oracle，postgresql,sqlite\n- 支持自定义sql，sql语句可以写在配置文件中，同样支持mybatis标签。\n- 支持与spring-boot集成。\n- 轻量级，无侵入性，可与传统mybatis用法共存。\n\n# 快速开始（springboot）\n\n- 新建一个springboot项目\n- pom.xml添加fastmybatis-spring-boot-starter\n\n```\n&lt;dependency&gt;\n    &lt;groupId&gt;net.oschina.durcframework&lt;/groupId&gt;\n    &lt;artifactId&gt;fastmybatis-spring-boot-starter&lt;/artifactId&gt;\n    &lt;version&gt;1.0.2&lt;/version&gt;\n&lt;/dependency&gt;\n```\n- 假设数据库有张`t_user`表，添加对应的实体类`TUser.java`和Mapper`TUserMapper.java`\n- 在`application.propertis`中配置数据库连接\n- 编写测试用例\n\n```\n@Autowired\nTUserMapper mapper;\n    \n// 根据主键查询\n@Test\npublic void testGetById() {\n    TUser user = mapper.getById(3);\n    System.out.println(user);\n}\n```\n\n# Mapper方法列表\n\n```\n/**\n * 根据对象查询,可以传主键值,也可以传整个对象\n * \n * @param id\n * @return 返回实体对象，没有返回null\n */\nEntity getById(ID id);\n\n/**\n * 根据条件查找单条记录\n * @param query 查询条件\n * @return 返回实体对象，没有返回null\n */\nEntity getByQuery(@Param(\"query\")Query query);\n\n/**\n * 根据字段查询一条记录\n * @param column 数据库字段名\n * @param value 字段值\n * @return 返回实体对象，没有返回null\n */\nEntity getByColumn(@Param(\"column\")String column,@Param(\"value\")Object value);\n\n/**\n * 查询总记录数\n * \n * @param query 查询条件\n * @return 返回总记录数\n */\nlong getCount(@Param(\"query\")Query query);  \n\n/**\n * 根据字段查询集合\n * @param column 数据库字段名\n * @param value 字段值\n * @return 返回实体对象集合，没有返回空集合\n */\nList&lt;Entity&gt; listByColumn(@Param(\"column\")String column,@Param(\"value\")Object value);\n\n/**\n * 条件查询\n * \n * @param query 查询条件\n * @return 返回实体对象集合，没有返回空集合\n */\nList&lt;Entity&gt; list(@Param(\"query\")Query query);\n\n/**\n * 查询指定字段结果\n * @param columns 返回的字段\n * @param query 查询条件\n * @return 返回结果集\n */\nList&lt;Map&lt;String, Object&gt;&gt; listMap(@Param(\"columns\")List&lt;String&gt; columns, @Param(\"query\")Query query);\n\n/**\n * 新增,新增所有字段\n * \n * @param entity\n * @return 受影响行数\n */\nint save(Entity entity);\n\n/**\n * 新增（忽略null数据）\n * @param entity\n * @return 受影响行数\n */\nint saveIgnoreNull(Entity entity);\n\n/**\n * 批量添加,只支持mysql,sqlserver2008及以上数据库.&lt;br&gt;\n * &lt;strong&gt;若要兼容其它版本数据库,请使用saveMulti()方法&lt;/strong&gt;\n * @param entitys\n * @return\n */\nint saveBatch(@Param(\"entitys\")List&lt;Entity&gt; entitys);\n\n/**\n * 批量添加,兼容更多的数据库版本.&lt;br&gt;\n * 此方式采用union all的方式批量insert,如果是mysql或sqlserver2008及以上推荐saveBatch()方法.\n * @param entitys\n * @return\n */\nint saveMulti(@Param(\"entitys\")List&lt;Entity&gt; entitys);\n\n/**\n * 修改,修改所有字段\n * \n * @param entity\n * @return 受影响行数\n */\nint update(Entity entity);\n\n/**\n * 根据主键更新不为null的字段\n * \n * @param entity\n * @return 受影响行数\n */\nint updateIgnoreNull(Entity entity);\n\n/**\n * 根据条件批量更新\n * \n * @param entity 待更新的数据，可以是实体类，也可以是Map{@literal&lt;String,Object&gt;}\n * @param query 更新条件\n * @return 受影响行数\n */\nint updateByQuery(@Param(\"entity\") Object entity, @Param(\"query\") Query query);\n\n/**\n * 删除\n * \n * @param entity\n * @return 受影响行数\n */\nint delete(Entity entity);\n\n/**\n * 根据id删除\n * \n * @param id 主键id\n * @return 受影响行数\n */\nint deleteById(ID id);\n\n/**\n * 根据条件删除\n * \n * @param query\n * @return 受影响行数\n */\nint deleteByQuery(@Param(\"query\")Query query);\n```\n\n# Query查询对象\n\n```\n查询姓名为张三，并且年龄为22岁的用户：\nQuery query = new Query().eq(\"username\",\"张三\").eq(\"age\",22);\nList&lt;User&gt; users = mapper.list(query);\n\n查询年龄为10,20,30的用户：\nQuery query = new Query().in(\"age\",Arrays.asList(10,20,30));\nList&lt;User&gt; users = mapper.list(query);\n\n查询注册日期大于2017-11-11的用户：\nDate regDate = ...\nQuery query = new Query().gt(\"reg_date\",regDate);\nList&lt;User&gt; users = mapper.list(query);\n\n查询性别为男的，年龄大于等于20岁的用户，按年龄降序：\nQuery query = new Query().eq(\"gender\",1).ge(\"age\",20).orderby(\"age\",Sort.DESC);\nList&lt;User&gt; users = mapper.list(query);\n\n分页查询：\nQuery query = new Query().eq(\"age\",10).page(1,10); // 第一页，每页10条数据\nList&lt;User&gt; users = mapper.list(query);\n\n查询总记录数：\nQuery query = new Query().eq(\"age\",10).page(1,10); // 第一页，每页10条数据\nlong total = mapper.getCount(query); // 该条件下总记录数\n```\n\n- 完整的测试用例，[点击前往](https://gitee.com/durcframework/fastmybatis/wikis/pages?title=%E5%AE%8C%E6%95%B4%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B&amp;parent=)\n\n# 工程介绍\n\n- fastmybatis-core：框架源代码\n- fastmybatis-demo：对应demo\n- fastmybatis-generator：代码生成工具，方便生成实体类和Mapper\n- fastmybatis-spring-boot-autoconfigure和fastmybatis-spring-boot-starter：springboot对应的的starter\n\n# 意见交流\n\nQ群328419269','2018-04-28 14:58:58','2018-06-20 11:34:24'),(7,6,'1','2018-04-28 17:12:27','2018-04-28 17:12:27'),(8,8,'# easyopen\n\n[Git](https://gitee.com/durcframework/easyopen \"Git\")\n\n一个简单易用的接口开放平台，平台封装了常用的参数校验、结果返回等功能，开发者只需实现业务代码即可。\n\neasyopen的功能类似于[淘宝开放平台](http://open.taobao.com/docs/api.htm?spm=a219a.7629065.0.0.6cQDnQ&amp;apiId=4)，它的所有接口只提供一个url，通过参数来区分不同业务。这样做的好处是接口url管理方便了，平台管理者只需维护好接口参数即可。由于参数的数量是可知的，这样可以在很大程度上进行封装。封装完后平台开发者只需要写业务代码，其它功能可以通过配置来完成。\n\n得益于Java的注解功能以及Spring容器对bean的管理，我们的开放接口平台就这样产生了。\n\n## 功能特点\n\n- 开箱即用，写完业务代码直接启动服务即可使用，无需其它配置。\n- 参数自动校验，支持国际化参数校验（JSR-303）。\n- 校验功能和结果返回功能实现各自独立，方便自定义实现或扩展。\n- 采用注解来定义接口，维护简单方便。\n- 支持i18n国际化消息返回。\n- 自动生成文档页面，类似swagger。\n- 采用数字签名进行参数验证，签名算法见：easyopen\\签名算法.txt。\n- 采用appKey-secret形式接入平台，即需要给接入方提供一个appKey和secret。\n\n## 结构图\n\n![easyopen结构图](https://gitee.com/uploads/images/2018/0117/095712_1f70de95_332975.png \"easyopen_arc.png\")\n\n## 文档页面\n\n![文档](https://gitee.com/uploads/images/2018/0507/111124_2b74ddc8_332975.png \"4.png\")\n\n## 示例\n\n- 定义接口：\n\n```\n@Api(name = \"goods.get\")\npublic Goods getGoods(GoodsParam param) {\n    Goods goods = new Goods();\n    goods.setId(1L);\n    goods.setGoods_name(\"苹果iPhoneX\");\n    goods.setPrice(new BigDecimal(8000));\n    return goods;\n}\n```\n\n- 请求数据：\n\n```\n{\n  \"name\": \"goods.get\",\n  \"version\": \"\",\n  \"app_key\": \"test\",\n  \"data\": \"%7B%22goodsPrice%22%3A%22%22%2C%22goods_name%22%3A%22iphoneX%22%7D\",\n  \"timestamp\": \"2018-03-22 13:48:58\",\n  \"format\": \"json\",\n  \"sign\": \"C946ACA5AC95B1790511764A10E675B7\"\n}\n```\n\n- 返回结果：\n\n```\n{\n    \"code\":\"0\",\n    \"data\":{\n        \"goods_name\":\"苹果iPhoneX\",\n        \"id\":1,\n        \"price\":8000\n    }\n}\n```\n\n## 工程说明\n\n- easyopen：easyopen核心代码\n- easyopen-server：开放平台服务端（spring-boot），接口提供方\n- easyopen-server2：基于springboot2,含有WebFlux例子\n- easyopen-sdk：接口对应的开发包（可适用于Android），配合server使用\n- easyopen-sdk-javascript：对应js的sdk\n- static：文档静态资源\n- index.html：文档首页，配合Pages功能使用\n\n## 使用说明\n\n1. 启动easyopen-server（业务代码在GoodsApi.java中）\n2. 运行easyopen-sdk中的SdkTest.java\n\n文档页面：http://localhost:8080/api/doc\n\n## 开发文档\n\n[easyopen开发文档](http://durcframework.gitee.io/easyopen)\n\n离线版：浏览器打开index.html\n\n## 意见交流\n\nQ群：328419269','2018-04-28 17:33:46','2018-05-24 17:45:23'),(9,10,'123','2018-04-28 17:44:48','2018-04-28 17:44:48'),(10,12,'# 题目\n\n记忆里那片永不凋落的树叶，葬在了那个璀璨的夏天。或许真的就是这样，一切的一切，都只是曾经的一段明媚的时光，是宿命的使然，无法逃脱，且不能改变。 那只属于青春的丰沛相思，那只属于过往的似水年华，经不起流光的辗转，指尖轻轻一戳，就会破碎。这是我们卑微的宿命。 明媚的天空下，望着云朵在空中飘摆，我总是告诉自己，不要再缅怀那些过去，然而抬起头，看看天空，那炽热的日光还是会将我满含眷念的眼眸硌疼，那云瑶里的微澜我的指尖也还是无法触摸，我，也还是我，那个忧郁得透蓝的少年。','2018-05-24 17:02:37','2018-05-24 17:02:37'),(11,13,'“自在飞花轻似梦，无边丝雨细如愁。”文人墨客的心里，总爱将万千思绪和绵绵丝雨联系在一起，剪不断，理还乱之时，雨，便成了情感唯一的突破口。也让后来的我们，学会了借雨抒情，借雨疗伤。\n\n或许，天生就是一个善感的人，极易被某种事物触动，从而使自己陷入情绪的沼泽而不能自拔。那不期而遇的雨，便如同知己一般，贴近我的内心，总是在最需要倾诉的时候，陪伴于无声。\n\n已经记不清，从何时起喜欢上的雨，也不知从何时起，习惯了在这样一个又一个下着雨的夜晚，一个人站在窗前，认真地听雨。\n\n雨夜听雨，除了享受无边的诗意以外，也是一个心灵被洗涤与净化的过程。在渐深渐浓的夜色里，在渐急渐密的雨声里，在渐进渐退的思绪里，倾听内心的声音，享受思念的自由，这片刻的清宁，与孤独同在，恰恰好。\n\n说到孤独，龙应台在写给《亲爱的安德烈》中这样说：那推推挤挤同唱同乐的群体情感，那无忧无虑无猜忌的同行深情，在人的一生中也只有少年时期有。离开这段纯洁而明亮的阶段，路其实可能愈走愈孤单。( 文章阅读网：www.sanwen.net )\n\n确实如此，人生就象是一条从宽阔的草原走进森林的路，在越走越狭窄的空间，在越走越严苛的现实面前，许多人开始自顾着自赶路，许多人在寻求余生的突破，于是，许多的故事告一段落，许多的情义毁于一旦，在有意与无意之间，结伴同行的暖，渐变成过眼的云烟。\n\n渴望热烈又惧怕热烈，享受寂寞又不甘寂寞，在焦虑和犹疑中彷徨，总也走不出心的囹圄，这是现代人的通病。尤其是在孤独无依之时，更象是走在了单行道上，前不见古人，后不见来者，念天地之悠悠，独怆然而涕下。\n\n为了合群，我们不知浪费了多少时间，为了同行，我们不知耗费了多少精力，殊不知，越长大越孤单，越到后来，越发现理想与现实的差距。真心诚意换不来地久天长，踮起脚尖，你依然无法触摸到天边的彩虹。\n\n有人说，人之所以痛苦，是因为追求的太多，人之所以烦恼，是因为想要的太多，人之所以不快乐，是因为计较的太多。我不知道我的烦恼，到底属于哪一种，但总有些时光，是知音少，弦断有谁听的悲伤，总有些时光，是沉思往事立残阳的黯然。\n\n生而为人，没有谁不孤单。或许，只有在寂寞中学会与自己相处，才能够完全地成为自己，只有在孤独中学会与生活讲和，才能够真正地寻觅到幸福，只有在遍尝苦痛之后，才能够知晓甜蜜的滋味。\n\n一盏清茶，听风数雨，这，何尝不是一种生活的方式。\n\n总爱在落雨的黄昏，为自己沏一杯茶，然后在清澈的茶汤里，放进十几粒采自石练山中的野菊米，让茶的清香，融进菊的芬芳。看一片片绿叶在沸水中舒展，看细小的菊米如一粒粒黄玉滚动其间，万千思绪，便随着水气氤氲，泊进袅袅的茶香里。\n\n茶，似乎是男人的专利，可如我这样的女子，也爱茶。尤其是雨丝飘坠的夜晚，一杯清茶在握，便觉分外的暖。通过掌心的温度，轻嗅茶与菊的芬芳，这醇香的味道，多像是他乡遇故知，在恰好的时间，有恰好的温度。\n\n这，让我很容易想到了一个词：依赖，当习惯成为了自然，依赖便自在其中。人生，若能多一些如此依赖，少一些无情伤害，一如这给予温暖的茶，这涤尽烦恼的雨，那么纵然时光暗淡，又有何惧。\n\n雨夜听雨，听雨的旋律在雨夜里奏响，在茶与菊的痴缠里，在袅袅升腾的水气里，一些事慢慢忆，一些人渐渐忘……','2018-05-24 17:18:57','2018-05-24 17:47:18'),(12,14,'# 关于easydoc\n\n一个文档管理项目，支持markdown写作，用到的技术：\n\n- 服务端：springboot + [easyopen](https://gitee.com/durcframework/easyopen \"easyopen\") + [fastmybatis](https://gitee.com/durcframework/fastmybatis \"fastmybatis\")\n- 前端：jQuery + bootstrap + [jui](https://gitee.com/durcframework/jui \"jui\")\n\n- 前后端分离，可独立部署\n','2018-05-24 17:43:45','2018-06-20 11:33:45'),(13,15,'# JUI界面库\n\n一个使用JavaScript编写的界面库，采用面向对象方式实现。\n\n- JS框架：jQuery-1.11.0\n- CSS框架：bootstrap-3.3.0\n- JS压缩工具：YUI Compressor\n- JS文档生成工具：jsduck\n\n## 架构图\n\n![结构图](https://gitee.com/uploads/images/2018/0509/202206_be864a5f_332975.png \"6.png\")\n\n## 预览\n\n在线预览：http://durcframework.gitee.io/jui\n\n离线浏览：浏览器打开index.html\n\n## 构建说明\n\n1. 前提:安装JDK,maven,配置好环境变量\n\n2. 运行build.bat,输出结果在WebContent\\jui\\dest下,同时会生成文档(目录：WebContent\\doc)\n\n## 文档生成\n\n运行doc-creator/run.bat即可\n文档生成在WebContent\\doc下\n\n如有报错,删除doc再重试\n\n## 文件结构\n\n```\njui\n├─WebContent 工程目录\n│    ├─doc 文档\n│    ├─doc-creator 文档生成器\n│    ├─jui\n│    │  ├─asserts 依赖资源\n│    │  ├─dest 压缩后的js\n│    │  ├─src jui源码\n│    │  └─test 测试\n│    └─script 构建步骤脚本\n│\n├─build.bat 构建脚本\n├─index.html 预览\n├─pom.xml maven配置\n└─readme.md\n```\n\n使用只需要asserts和dest这两个文件夹，如果要调试，将dest替换成src。\n\n## 效果图\n\n![预览](https://gitee.com/uploads/images/2018/0503/181229_08e81086_332975.jpeg \"1.jpg\")\n\n![预览](https://gitee.com/uploads/images/2018/0503/181237_17dd5496_332975.jpeg \"2.jpg\")\n\n![预览](https://gitee.com/uploads/images/2018/0503/181243_0a501bf4_332975.jpeg \"3.jpg\")\n\n![预览](https://gitee.com/uploads/images/2018/0503/181251_8699e920_332975.jpeg \"4.jpg\")\n\n![预览](https://gitee.com/uploads/images/2018/0503/181259_584139c7_332975.jpeg \"5.jpg\")\n\n文档\n\n![API](https://gitee.com/uploads/images/2018/0503/181306_15e79ee9_332975.jpeg \"6.jpg\")','2018-05-25 10:01:54','2018-05-25 10:02:01'),(14,16,'2','2018-05-25 13:59:38','2018-05-25 13:59:38'),(15,17,'**简要描述：** \n\n- 用户注册接口\n\n**请求URL：** \n- ` http://xx.com/api/user/register `\n  \n**请求方式：**\n- POST \n\n**参数：** \n\n|参数名|必选|类型|说明|\n|:----    |:---|:----- |-----   |\n|username |是  |string |用户名   |\n|password |是  |string | 密码    |\n|name     |否  |string | 昵称    |\n\n **返回示例**\n\n``` \n  {\n    \"error_code\": 0,\n    \"data\": {\n      \"uid\": \"1\",\n      \"username\": \"12154545\",\n      \"name\": \"吴系挂\",\n      \"groupid\": 2 ,\n      \"reg_time\": \"1436864169\",\n      \"last_login_time\": \"0\",\n    }\n  }\n```\n\n **返回参数说明** \n\n|参数名|类型|说明|\n|:-----  |:-----|-----                           |\n|groupid |int   |用户组id，1：超级管理员；2：普通用户  |\n\n **备注** \n\n- 更多返回错误代码请看首页的错误代码描述\n\n\n','2018-06-06 11:59:51','2018-06-06 11:59:51');

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
